use std::string;

use fake::faker::name::en::Name;
use fake::Fake;
use clap::{arg, command, value_parser, ArgAction, Command};

fn main() {
    Command::new("Random Data Generator CLI")
        .version("0.1.1")
        .author("Daniel Marcos <daniel04pessoal@gmail.com>")
        .about("This CLI creates random data generated by the command you choose.");
    let matches = command!()
    .arg(
        arg!([generate] "Generates the value")
    )
    .subcommand(
        Command::new("name")
            .about("Generates a random name and prints it on the console")
    )
    .get_matches();
        // Continued program logic goes here...
    if let Some(name_matches) = matches.subcommand_matches("name") {
        let name: String = Name().fake();
        // Print the random name
        println!("Value for name: {name}");
    }
}